{"ast":null,"code":"const initialState = {\n  items: [],\n  isLoaded: false\n};\n\n// Редюсер определяет как изменяется состояние в ответ на экшены, отправленные в store\nconst dishes = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"dishes/set\") {\n    return {\n      ...state,\n      items: action.payload,\n      isLoaded: true\n    };\n  }\n  return state;\n};\nexport default dishes;","map":{"version":3,"names":["initialState","items","isLoaded","dishes","state","action","type","payload"],"sources":["/home/adamadziev/Рабочий стол/all projects/projects on GitHub/react-foodhub/src/redux/reducers/dishes.js"],"sourcesContent":["const initialState = {\n  items: [],\n  isLoaded: false,\n};\n\n// Редюсер определяет как изменяется состояние в ответ на экшены, отправленные в store\nconst dishes = (state = initialState, action) => {\n  if (action.type === \"dishes/set\") {\n    return {\n      ...state,\n      items: action.payload,\n      isLoaded: true,\n    };\n  }\n\n  return state;\n};\n\nexport default dishes;\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA,MAAMC,MAAM,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGJ,YAAY;EAAA,IAAEK,MAAM;EAC1C,IAAIA,MAAM,CAACC,IAAI,KAAK,YAAY,EAAE;IAChC,OAAO;MACL,GAAGF,KAAK;MACRH,KAAK,EAAEI,MAAM,CAACE,OAAO;MACrBL,QAAQ,EAAE;IACZ,CAAC;EACH;EAEA,OAAOE,KAAK;AACd,CAAC;AAED,eAAeD,MAAM"},"metadata":{},"sourceType":"module"}