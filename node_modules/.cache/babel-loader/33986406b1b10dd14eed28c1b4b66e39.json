{"ast":null,"code":"const initialState = {\n  totalPrice: 0,\n  items: []\n};\nconst cart = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  // 'cart/add' - ключ, по которому будет срабатывать данный if и вызываться то что нам нужно\n  if (action.type === \"cart/add\") {\n    const findItem = state.items.find(item => item.id === action.payload.id);\n    if (findItem) {\n      let newTotalPrice = state.totalPrice;\n      const newItems = state.items.filter(item => {\n        if (item.id === findItem.id) {\n          item.count++;\n          newTotalPrice += item.price;\n          return true;\n        }\n        return true;\n      });\n      return {\n        ...state,\n        items: newItems,\n        totalPrice: newTotalPrice\n      };\n    }\n    const itemWithCount = action.payload;\n    itemWithCount.count = 1;\n    return {\n      ...state,\n      items: [...state.items, itemWithCount],\n      totalPrice: state.totalPrice += action.payload.price\n    };\n  }\n  if (action.type === \"cart/decItem\") {\n    const findItem = state.items.find(item => item.id === action.payload);\n    let newTotalPrice = state.totalPrice;\n    const newItems = state.items.filter(item => {\n      if (item.id === findItem.id) {\n        item.count--;\n        newTotalPrice -= item.price;\n        return true;\n      }\n      return true;\n    });\n    return {\n      ...state,\n      items: newItems,\n      totalPrice: newTotalPrice\n    };\n  }\n  if (action.type === \"cart/incItem\") {\n    const findItem = state.items.find(item => item.id === action.payload);\n    let newTotalPrice = state.totalPrice;\n    const newItems = state.items.filter(item => {\n      if (item.id === findItem.id) {\n        item.count++;\n        newTotalPrice += item.price;\n        return true;\n      }\n      return true;\n    });\n    return {\n      ...state,\n      items: newItems,\n      totalPrice: newTotalPrice\n    };\n  }\n  if (action.type === \"cart/deleteById\") {\n    const findItem = state.items.find(item => item.id === action.payload);\n    const newTotalPrice = state.totalPrice - findItem.price * findItem.count;\n    const newCartItems = state.items.filter(item => item.id !== action.payload);\n    return {\n      ...state,\n      items: newCartItems,\n      totalPrice: newTotalPrice\n    };\n  }\n  if (action.type === \"cart/clear\") {\n    return {\n      ...state,\n      items: []\n    };\n  }\n  return state;\n};\nexport default cart;","map":{"version":3,"names":["initialState","totalPrice","items","cart","state","action","type","findItem","find","item","id","payload","newTotalPrice","newItems","filter","count","price","itemWithCount","newCartItems"],"sources":["/home/adamadziev/Рабочий стол/all projects/projects on GitHub/react-foodhub/src/redux/reducers/cart.js"],"sourcesContent":["const initialState = {\n  totalPrice: 0,\n  items: [],\n};\n\nconst cart = (state = initialState, action) => {\n  // 'cart/add' - ключ, по которому будет срабатывать данный if и вызываться то что нам нужно\n  if (action.type === \"cart/add\") {\n    const findItem = state.items.find((item) => item.id === action.payload.id);\n\n    if (findItem) {\n      let newTotalPrice = state.totalPrice;\n      const newItems = state.items.filter((item) => {\n        if (item.id === findItem.id) {\n          item.count++;\n          newTotalPrice += item.price;\n          return true;\n        }\n        return true;\n      });\n\n      return {\n        ...state,\n        items: newItems,\n        totalPrice: newTotalPrice,\n      };\n    }\n\n    const itemWithCount = action.payload;\n    itemWithCount.count = 1;\n\n    return {\n      ...state,\n      items: [...state.items, itemWithCount],\n      totalPrice: (state.totalPrice += action.payload.price),\n    };\n  }\n\n  if (action.type === \"cart/decItem\") {\n    const findItem = state.items.find((item) => item.id === action.payload);\n\n    let newTotalPrice = state.totalPrice;\n    const newItems = state.items.filter((item) => {\n      if (item.id === findItem.id) {\n        item.count--;\n        newTotalPrice -= item.price;\n        return true;\n      }\n      return true;\n    });\n\n    return {\n      ...state,\n      items: newItems,\n      totalPrice: newTotalPrice,\n    };\n  }\n\n  if (action.type === \"cart/incItem\") {\n    const findItem = state.items.find((item) => item.id === action.payload);\n\n    let newTotalPrice = state.totalPrice;\n    const newItems = state.items.filter((item) => {\n      if (item.id === findItem.id) {\n        item.count++;\n        newTotalPrice += item.price;\n        return true;\n      }\n      return true;\n    });\n\n    return {\n      ...state,\n      items: newItems,\n      totalPrice: newTotalPrice,\n    };\n  }\n\n  if (action.type === \"cart/deleteById\") {\n    const findItem = state.items.find((item) => item.id === action.payload);\n\n    const newTotalPrice = state.totalPrice - findItem.price * findItem.count;\n    const newCartItems = state.items.filter(\n      (item) => item.id !== action.payload\n    );\n\n    return {\n      ...state,\n      items: newCartItems,\n      totalPrice: newTotalPrice,\n    };\n  }\n\n  if (action.type === \"cart/clear\") {\n    return {\n      ...state,\n      items: [],\n    };\n  }\n\n  return state;\n};\n\nexport default cart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}